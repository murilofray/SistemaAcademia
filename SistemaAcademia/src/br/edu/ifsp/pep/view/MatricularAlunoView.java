package br.edu.ifsp.pep.view;

import br.edu.ifsp.pep.dao.AlunoDAO;
import br.edu.ifsp.pep.dao.MatriculaDAO;
import br.edu.ifsp.pep.dao.TurmaDAO;
import br.edu.ifsp.pep.modelo.Aluno;
import br.edu.ifsp.pep.modelo.Matricula;
import br.edu.ifsp.pep.modelo.Turma;
import java.math.BigDecimal;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author vivi
 */
public class MatricularAlunoView extends javax.swing.JDialog {

    private final MatriculaDAO matriculaDAO = new MatriculaDAO();
    private Matricula matricula;
    private List<Matricula> matriculas;
    private final AlunoDAO alunoDAO = new AlunoDAO();
    private List<Aluno> alunos = alunoDAO.findAll();
    private Aluno aluno;
    private final TurmaDAO turmaDAO = new TurmaDAO();
    private List<Turma> turmas = turmaDAO.findAll();
    private Turma turma;

    /**
     * Creates new form TelaFuncionarioView
     */
    public MatricularAlunoView() {
        initComponents();
        this.atualizarTabelaAlunos();
        this.atualizarTabelaTurma();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton7 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        lTitulo = new javax.swing.JLabel();
        tfPesquisaAluno = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtAlunos = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        bVoltar = new javax.swing.JButton();
        bMatricular = new javax.swing.JButton();
        cbPesquisaAluno = new javax.swing.JComboBox<>();
        bPesquisaAluno = new javax.swing.JButton();
        cbPesquisaTurma = new javax.swing.JComboBox<>();
        tfPesquisaTurma = new javax.swing.JTextField();
        bPesquisaTurma = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtTurmas = new javax.swing.JTable();
        lTitulo1 = new javax.swing.JLabel();

        jButton7.setText("jButton7");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setModal(true);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        lTitulo.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        lTitulo.setText("Alunos");
        lTitulo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jtAlunos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nome", "CPF", "Sexo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jtAlunos);
        if (jtAlunos.getColumnModel().getColumnCount() > 0) {
            jtAlunos.getColumnModel().getColumn(0).setResizable(false);
            jtAlunos.getColumnModel().getColumn(1).setResizable(false);
            jtAlunos.getColumnModel().getColumn(2).setResizable(false);
            jtAlunos.getColumnModel().getColumn(3).setResizable(false);
        }

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        bVoltar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        bVoltar.setText("Voltar");
        bVoltar.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        bVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bVoltarActionPerformed(evt);
            }
        });

        bMatricular.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        bMatricular.setText("Matricular");
        bMatricular.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        bMatricular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bMatricularActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(bMatricular, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(bVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(211, 211, 211))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bVoltar, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
                    .addComponent(bMatricular, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE))
                .addContainerGap())
        );

        cbPesquisaAluno.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nome:", "Id:", "Sexo:", "Cpf:" }));

        bPesquisaAluno.setText("Pesquisar");
        bPesquisaAluno.setActionCommand("bor");
        bPesquisaAluno.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        bPesquisaAluno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bPesquisaAlunoActionPerformed(evt);
            }
        });

        cbPesquisaTurma.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nome:", "ID:", "Valor:" }));

        bPesquisaTurma.setText("Pesquisar");
        bPesquisaTurma.setActionCommand("bor");
        bPesquisaTurma.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        bPesquisaTurma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bPesquisaTurmaActionPerformed(evt);
            }
        });

        jtTurmas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Nome", "Modalidade"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jtTurmas);

        lTitulo1.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        lTitulo1.setText("Turmas");
        lTitulo1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 655, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(52, 52, 52)
                                .addComponent(cbPesquisaAluno, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(tfPesquisaAluno, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(bPesquisaAluno, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(105, 105, 105)
                        .addComponent(cbPesquisaTurma, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tfPesquisaTurma, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bPesquisaTurma, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(306, 306, 306)
                        .addComponent(lTitulo1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(308, 308, 308)
                        .addComponent(lTitulo)))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lTitulo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfPesquisaAluno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbPesquisaAluno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bPesquisaAluno, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lTitulo1)
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfPesquisaTurma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbPesquisaTurma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bPesquisaTurma, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void bVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bVoltarActionPerformed
        this.dispose();
    }//GEN-LAST:event_bVoltarActionPerformed

    private void bMatricularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bMatricularActionPerformed
        boolean matriculado = false;
        if (jtAlunos.getSelectedRow() >= 0 && jtTurmas.getSelectedRow() >= 0) {
            aluno = this.alunos.get(jtAlunos.getSelectedRow());
            turma = this.turmas.get(jtTurmas.getSelectedRow());
            matriculas = matriculaDAO.findAll();
            for (Matricula matricula1 : matriculas) {
                if (matricula1.getAluno().getId() == aluno.getId() && matricula1.getTurma().getId() == turma.getId()) {
                    matriculado = true;
                }
            }

            if (!matriculado) {
                if (turma.getCapacidadeMaxima() >= turma.getQuantidadeMatriculados()) {
                    matricula = new Matricula(new Date(), aluno, turma);
                    try {
                        matriculaDAO.inserir(matricula);
                        turma.setQuantidadeMatriculados(turma.getQuantidadeMatriculados() + 1);
                        turmaDAO.alterar(turma);
                    } catch (Exception ex) {
                        Logger.getLogger(MatricularAlunoView.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    this.dispose();
                } else {
                    JOptionPane.showMessageDialog(null, "Turma cheia!", "Atenção", JOptionPane.WARNING_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Aluno já matriculado nessa turma!", "Atenção", JOptionPane.WARNING_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Selecione um aluno e uma turma para matricular!", "Atenção", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_bMatricularActionPerformed

    private void bPesquisaAlunoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bPesquisaAlunoActionPerformed
        int id;
        if (cbPesquisaAluno.getSelectedIndex() == 0) {
            alunos = alunoDAO.findByNome(tfPesquisaAluno.getText());
        } else {
            if (cbPesquisaAluno.getSelectedIndex() == 1) {
                try {
                    id = Integer.parseInt(tfPesquisaAluno.getText());
                    alunos = alunoDAO.findById(id);
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(null, "Para pesquisar por id, informe apenas números!", "Atenção", JOptionPane.WARNING_MESSAGE);
                }
            } else {
                if (cbPesquisaAluno.getSelectedIndex() == 2) {
                    alunos = alunoDAO.findBySexo(tfPesquisaAluno.getText());
                } else {
                    if (cbPesquisaAluno.getSelectedIndex() == 3) {
                        alunos = alunoDAO.findByCpf(tfPesquisaAluno.getText());
                    }
                }
            }
        }

        atualizarTabelaAlunos();
    }//GEN-LAST:event_bPesquisaAlunoActionPerformed

    private void bPesquisaTurmaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bPesquisaTurmaActionPerformed
        if (tfPesquisaTurma.getText().equals("")) {
            turmas = turmaDAO.findAll();
        } else {
            if (cbPesquisaTurma.getSelectedIndex() == 0) {
                turmas = turmaDAO.findByNome(tfPesquisaTurma.getText());
            } else {
                if (cbPesquisaTurma.getSelectedIndex() == 1) {
                    try {
                        int id;
                        id = Integer.parseInt(tfPesquisaTurma.getText());
                        turmas = turmaDAO.findById(id);
                    } catch (NumberFormatException e) {
                        JOptionPane.showMessageDialog(null, "Para pesquisar por id, informe apenas números!", "Atenção", JOptionPane.WARNING_MESSAGE);
                    }
                } else {
                    try {
                        String valorVirgula = tfPesquisaTurma.getText();
                        valorVirgula = valorVirgula.replaceAll(",", ".");
                        BigDecimal valor = new BigDecimal(valorVirgula);
                        turmas = turmaDAO.findByValor(valor);
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(null, "Para pesquisar por valor, informe apenas números e . !", "Atenção", JOptionPane.WARNING_MESSAGE);
                    }

                }
            }
        }
        atualizarTabelaTurma();
    }//GEN-LAST:event_bPesquisaTurmaActionPerformed

    private void atualizarTabelaAlunos() {
        DefaultTableModel modelo = (DefaultTableModel) jtAlunos.getModel();
        modelo.setNumRows(0);
        for (Aluno alunoo : alunos) {
            modelo.addRow(new Object[]{alunoo.getId(), alunoo.getNome(), alunoo.getCpf(), alunoo.getSexo()});
        }
    }

    private void atualizarTabelaTurma() {
        DefaultTableModel modelo = (DefaultTableModel) jtTurmas.getModel();
        modelo.setNumRows(0);
        for (Turma turmaa : turmas) {
            modelo.addRow(new Object[]{turmaa.getId(), turmaa.getNome(), turmaa.getModalidadeId()});
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MatricularAlunoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MatricularAlunoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MatricularAlunoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MatricularAlunoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MatricularAlunoView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bMatricular;
    private javax.swing.JButton bPesquisaAluno;
    private javax.swing.JButton bPesquisaTurma;
    private javax.swing.JButton bVoltar;
    private javax.swing.JComboBox<String> cbPesquisaAluno;
    private javax.swing.JComboBox<String> cbPesquisaTurma;
    private javax.swing.JButton jButton7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jtAlunos;
    private javax.swing.JTable jtTurmas;
    private javax.swing.JLabel lTitulo;
    private javax.swing.JLabel lTitulo1;
    private javax.swing.JTextField tfPesquisaAluno;
    private javax.swing.JTextField tfPesquisaTurma;
    // End of variables declaration//GEN-END:variables
}
